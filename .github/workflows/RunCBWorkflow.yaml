name: Build and Publish Artifact

on:
  push:
    branches:
      - test-branch

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Read & Increment Version
        id: versioning
        run: |
          VERSION_FILE="QA_VERSION"

          if [ ! -f "$VERSION_FILE" ]; then
            echo "1.0.0" > $VERSION_FILE
          fi

          CURRENT_VERSION=$(cat $VERSION_FILE)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          echo "$NEW_VERSION" > $VERSION_FILE
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT


      - name: Build Go Application
        run: |
          go mod tidy
          go install .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/demo-service"
          IMAGE_VERSION="${{ steps.versioning.outputs.version }}"

          docker build -t $IMAGE_NAME:$IMAGE_VERSION --progress=plain .
          docker tag $IMAGE_NAME:$IMAGE_VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_VERSION
          docker push $IMAGE_NAME:latest

      - name: Get Image Digest
        id: image-digest
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/demo-service"
          IMAGE_VERSION="${{ steps.versioning.outputs.version }}"
          
          # Extract digest from pushed image
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_NAME:$IMAGE_VERSION | awk -F@ '{print $2}')

          echo "Image Digest: $DIGEST"
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          
          URL="docker.io/${{ secrets.DOCKER_USERNAME }}/demo-service:${{ steps.versioning.outputs.version }}"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Register Build Artifact
        uses: cloudbees-io-gha/register-build-artifact@v1
        with:
          name: "demo-service-12"
          version: "1.0.0"
          url: "docker.io/demo-service-12/1.0.0"
          digest: "test-digest"
          cloudbees-pat: ${{ secrets.PROD_PAT }}
          cloudbees-url: "https://api.cloudbees.io"
          component-id: "1c0f4482-bd89-4489-8c86-313128f2f44a"



      # - name: Run My Custom Go Action
      #   uses: cloudbees-gha-cbp/run-cloudbees-workflow@main
      #   id: go-action
      #   with:
      #     #cloudbees-url: "https://api.saas-preprod.beescloud.com/"
      #     cloudbees-pat: ${{ secrets.PROD_PAT }}
      #     workflow-file-name: "deploy-artifact.yaml"
      #     workflow-inputs: '{"image-name": "demo-service", "image-version": "${{ steps.versioning.outputs.version }}", "digest":"${{ steps.image-digest.outputs.digest }}", "url":"${{ steps.image-digest.outputs.url }}" }'


      - name: Run CloudBees platform workflow
        uses: cloudbees-io-gha/run-cloudbees-workflow@v1
        id: go-action
        with:
         cloudbees-pat: ${{ secrets.PROD_PAT }}
         workflow-file-name: "deploy-artifact.yaml"
         workflow-inputs: '{"image-name": "demo-service", "image-version": "${{ steps.versioning.outputs.version }}", "digest":"${{ steps.image-digest.outputs.digest }}", "url":"${{ steps.image-digest.outputs.url }}" }'


      - name: Use runUrl output
        run: echo "The CloudBees run URL is ${{ steps.go-action.outputs.cbp_run_url}}"
        
